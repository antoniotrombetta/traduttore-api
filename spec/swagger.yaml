---
swagger: "2.0"
info:
  description: "# Introduction\nThis document describes the programmatic interface\
    \ of the Traduttore service\n"
  version: "1.0.0"
  title: "Traduttore API"
  contact:
    email: "baez@disi.unitn.it"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/mbaezpy/Traduttore/1.0.0"
tags:
- name: "cartella"
  description: "These set of operations serve the integration needs with the Cartella\
    \ system"
- name: "mobile"
  description: "These set of operations serve the needs of the Traduttore Mobile application\n"
- name: "admins"
  description: "These set of operations serve the needs of the Traduttore admin app"
schemes:
- "https"
paths:
  /sync/shareable:
    get:
      tags:
      - "cartella"
      summary: "Get the sharing information for an event and resident"
      description: "This function provides information about whether to share a specific\
        \ event instance, and the sharing settings, including how, and with whom to\
        \ share.\n"
      operationId: "syncShareableGET"
      produces:
      - "application/json"
      parameters:
      - name: "eventTypeId"
        in: "query"
        description: "ID of the event type"
        required: true
        type: "string"
        format: "uuid"
      - name: "residentId"
        in: "query"
        description: "ID of the resident"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SynchInfo"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Cartella"
  /sync/events:
    get:
      tags:
      - "cartella"
      summary: "Search events, including pending commjunications"
      description: "This function allows the NH Staff to search events, and especially\
        \ pending communications that have been delegated to their role.\n"
      operationId: "syncEventsGET"
      produces:
      - "application/json"
      parameters:
      - name: "delegatedTo"
        in: "query"
        description: "ID of user to which the event is delegated"
        required: true
        type: "string"
        format: "uuid"
      - name: "optSnooze"
        in: "query"
        description: "ID of user to which the event is delegated"
        required: false
        type: "boolean"
      - name: "limit"
        in: "query"
        description: "Max number of records to return"
        required: false
        type: "integer"
        format: "int32"
      - name: "skip"
        in: "query"
        description: "Number of records to skip"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventSharing"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Cartella"
    post:
      tags:
      - "cartella"
      summary: "Push events from the Cartella to the Collegamenti platform"
      description: "This operation allows NH staff to push events to the Collegamenti\
        \ platform, so it can be distributed to the family members.\n"
      operationId: "syncEventsPOST"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Event to be pushed"
        required: true
        schema:
          $ref: "#/definitions/EventSharing"
      responses:
        201:
          description: "Event was successfully created"
          headers:
            Location:
              type: "string"
              format: "uri"
              description: "URI to the newly created resource"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "Invalid data was sent"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Cartella"
  /sync/event/{eventId}:
    get:
      tags:
      - "cartella"
      summary: "Retrieve an event, along with the list of related communications"
      description: "This function retrieves an event, along with the previous updates\
        \ / communications (or sharing) of that event with the family members.\n"
      operationId: "syncEventEventIdGET"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of the event"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/EventSharing"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Cartella"
  /sync/event/{eventId}/updates:
    post:
      tags:
      - "cartella"
      summary: "Pushes event updates from the Cartella to the Collegamenti platform"
      description: "This function allows NH staff to push follow up on events to the\
        \ Collegamenti platform, so it can be distributed to the family members.\n"
      operationId: "syncEventEventIdUpdatesPOST"
      consumes:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of the event"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Update to be pushed"
        required: true
        schema:
          $ref: "#/definitions/EventSharingUpdate"
      responses:
        201:
          description: "Successful operation"
          headers:
            Location:
              type: "string"
              format: "uri"
              description: "URI to the newly created resource"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Cartella"
  /sync/event_update/{updateId}:
    put:
      tags:
      - "cartella"
      summary: "Updates pending event updates, especially to decide on whether to\
        \ share or cancel pending communications"
      description: "This function allows NH staff to decide on the pending communications,\
        \ either to cancell the sharing or to push them to the family members.\n"
      operationId: "syncEvent_updateUpdateIdPUT"
      consumes:
      - "application/json"
      parameters:
      - name: "updateId"
        in: "path"
        description: "ID of the event update"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Update to be pushed"
        required: true
        schema:
          $ref: "#/definitions/EventSharingUpdate"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Cartella"
  /calendar:
    get:
      tags:
      - "admins"
      - "mobile"
      summary: "Get a filtered list of events (pneeds or hstatus) and activities"
      description: "Filters the list of activities and events, filtered by type of\
        \ \"entry\" (pneeds, hstatus, activities)  and date\n"
      operationId: "getCalendarEvents"
      produces:
      - "application/json"
      parameters:
      - name: "calendarType"
        in: "query"
        description: "Type of calendar entry to be retrieved ((pneeds, hstatus, activities)\n"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "pneeds"
          - "hstatus"
          - "activities"
        collectionFormat: "multi"
      - name: "dateFrom"
        in: "query"
        description: "Start date of calendar entries"
        required: true
        type: "string"
        format: "date-time"
      - name: "dateTo"
        in: "query"
        description: "End date of calendar entries"
        required: true
        type: "string"
        format: "date-time"
      - name: "limit"
        in: "query"
        description: "Max number of records to return"
        required: false
        type: "integer"
        format: "int32"
      - name: "skip"
        in: "query"
        description: "Number of records to skip"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CalendarEntry"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
  /pneeds/{eventId}:
    get:
      tags:
      - "mobile"
      summary: "Get the a Primary Need event"
      description: "Retrieves the PN event identified by eventId\n"
      operationId: "getPNEvent"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of PN event to retrieve"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PrimaryNeed"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
  /hstatus/{eventId}:
    get:
      tags:
      - "mobile"
      summary: "Get a Health status event"
      description: "Obtains the HS event identified by eventId\n"
      operationId: "getHSEvent"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of HS event to retrieve"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/HealthStatus"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
  /activity/{activityId}:
    get:
      tags:
      - "mobile"
      - "admins"
      summary: "Get an activity"
      description: "Retrieves the activity identified by eventId\n"
      operationId: "getActivity"
      produces:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of the activity to retrieve"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Activity"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
    put:
      tags:
      - "admins"
      summary: "Update an existing activity"
      operationId: "updateActivity"
      consumes:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of the activity to retrieve"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Updates to the activity"
        required: true
        schema:
          $ref: "#/definitions/Activity"
      responses:
        204:
          description: "Successful operation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
  /activity:
    post:
      tags:
      - "admins"
      summary: "Create a new activity"
      operationId: "createActivity"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Activity to be created"
        required: true
        schema:
          $ref: "#/definitions/Activity"
      responses:
        201:
          description: "Successful operation"
          headers:
            Location:
              type: "string"
              format: "uri"
              description: "URI to the newly created resource"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
  /activity/{activityId}/editions:
    get:
      tags:
      - "mobile"
      - "admins"
      summary: "Get the list of editions of an activity"
      description: "Retrieves the list of editions of an activity\n"
      operationId: "getActivityEditions"
      produces:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of the activity"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ActivityEdition"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
    post:
      tags:
      - "admins"
      summary: "Create a new activity edition"
      description: "Creates a new activity edition for the given activity      \n"
      operationId: "createActivityEdition"
      consumes:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of the activity"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Activity Edition to be created"
        required: true
        schema:
          $ref: "#/definitions/ActivityEdition"
      responses:
        201:
          description: "Successful operation"
          headers:
            Location:
              type: "string"
              format: "uri"
              description: "URI to the newly created resource"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
  /activity/{activityId}/appointments:
    get:
      tags:
      - "admins"
      summary: "Get the activity appointments"
      description: "Retrieves the list of appointment request for a given activity\
        \         \n"
      operationId: "getActivityAppointments"
      produces:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of the Appointment request"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Consultation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
    post:
      tags:
      - "mobile"
      summary: "Create an appointment request"
      description: "Creates a new appointment request for the given activity. Appointment\
        \ requests are allowed only with \"Consultation\" activities (canRequestAppointment=true)\n"
      operationId: "createAppointment"
      consumes:
      - "application/json"
      parameters:
      - name: "activityId"
        in: "path"
        description: "ID of the activity"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Appointment request to be created"
        required: true
        schema:
          $ref: "#/definitions/Consultation"
      responses:
        201:
          description: "Successful operation"
          headers:
            Location:
              type: "string"
              format: "uri"
              description: "URI to the newly created resource"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
  /activity_edition/{editionId}:
    get:
      tags:
      - "admins"
      - "mobile"
      summary: "Get the activity edition"
      description: "Retrieves an activity edition          \n"
      operationId: "getActivityEdition"
      produces:
      - "application/json"
      parameters:
      - name: "editionId"
        in: "path"
        description: "ID of the activity edition"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ActivityEdition"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
    put:
      tags:
      - "admins"
      summary: "Update the activity edition"
      description: "Updates the activity edition referenced by the uri\n"
      operationId: "updateActivityEdition"
      consumes:
      - "application/json"
      parameters:
      - name: "editionId"
        in: "path"
        description: "ID of the activity edition to be updated"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Activity Edition update"
        required: true
        schema:
          $ref: "#/definitions/ActivityEdition"
      responses:
        204:
          description: "Successful operation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
  /activity_edition/{editionId}/participations:
    get:
      tags:
      - "admins"
      - "mobile"
      summary: "Get the list of participants to an activity edition"
      description: "Retrieves the list of participants to the given activity edition\n"
      operationId: "getActivityEditionParticipations"
      produces:
      - "application/json"
      parameters:
      - name: "editionId"
        in: "path"
        description: "ID of the activity edition"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ActivityParticipation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
    post:
      tags:
      - "admins"
      - "mobile"
      summary: "Create an activity participation"
      description: "Creates an activity participation on the given activity edition\n"
      operationId: "addActivityEditionParticipant"
      consumes:
      - "application/json"
      parameters:
      - name: "editionId"
        in: "path"
        description: "ID of the activity edition"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Participation to be added"
        required: true
        schema:
          $ref: "#/definitions/ActivityParticipation"
      responses:
        201:
          description: "Successful operation"
          headers:
            Location:
              type: "string"
              format: "uri"
              description: "URI to the newly created resource"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
  /activity_participation/{participationId}:
    get:
      tags:
      - "admins"
      - "mobile"
      summary: "Get an activity participation"
      description: "Retrives the activity participation identified by the URI    \
        \  \n"
      operationId: "getActivityEditionParticipation"
      produces:
      - "application/json"
      parameters:
      - name: "participationId"
        in: "path"
        description: "ID of the activity edition"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ActivityParticipation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
    put:
      tags:
      - "admins"
      - "mobile"
      summary: "Update an activity participation"
      description: "Updates the activity participation identified by the URI     \
        \    \n"
      operationId: "updateActivityEditionParticipation"
      consumes:
      - "application/json"
      parameters:
      - name: "participationId"
        in: "path"
        description: "ID of the activity edition to be updated"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Participation to be updated"
        required: true
        schema:
          $ref: "#/definitions/ActivityParticipation"
      responses:
        204:
          description: "Successful operation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
  /appointment/{appointmentId}:
    get:
      tags:
      - "mobile"
      - "admins"
      summary: "Get an appointment request"
      description: "Gets the appointment request identified by the URI\n"
      operationId: "getAppointment"
      consumes:
      - "application/json"
      parameters:
      - name: "appointmentId"
        in: "path"
        description: "ID of the appointment"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Consultation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
    put:
      tags:
      - "mobile"
      - "admins"
      summary: "Update an appointment request"
      description: "Updates the appointment request identified by the URI\n"
      operationId: "updateAppointment"
      consumes:
      - "application/json"
      parameters:
      - name: "appointmentId"
        in: "path"
        description: "ID of the appointment"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Appointment request to be updated"
        required: true
        schema:
          $ref: "#/definitions/Consultation"
      responses:
        204:
          description: "Successful operation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
  /feedbacks:
    get:
      tags:
      - "admins"
      - "mobile"
      summary: "Get the list of feedbacks by context"
      description: "Gets and filter the feedbacks by context (feedback on staff, pneeds,\
        \ hstatus, activity)        \n"
      operationId: "getFeedbacks"
      produces:
      - "application/json"
      parameters:
      - name: "feedbackOn"
        in: "query"
        description: "Filter by context of feedback"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "staff"
          - "pneeds"
          - "hstatus"
          - "activity"
        collectionFormat: "multi"
      - name: "limit"
        in: "query"
        description: "Max number of records to return"
        required: false
        type: "integer"
        format: "int32"
      - name: "skip"
        in: "query"
        description: "Number of records to skip"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Feedback"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
    post:
      tags:
      - "mobile"
      summary: "Create a feedback entry"
      description: "Creates a contextual feedback         \n"
      operationId: "createFeedback"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Feedback to be added"
        required: true
        schema:
          $ref: "#/definitions/Feedback"
      responses:
        201:
          description: "Successful operation"
          headers:
            Location:
              type: "string"
              format: "uri"
              description: "URI to the newly created resource"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
  /feedback/{feedbackId}:
    get:
      tags:
      - "admins"
      - "mobile"
      summary: "Get a feedback"
      description: "Retrieves the feedback referenced by the URI\n"
      operationId: "getFeedback"
      produces:
      - "application/json"
      parameters:
      - name: "feedbackId"
        in: "path"
        description: "ID of the feedback"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Feedback"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
    put:
      tags:
      - "admins"
      - "mobile"
      summary: "Updates a feedback"
      description: "Updates the feedback referenced by the URI      \n"
      operationId: "updateFeedback"
      consumes:
      - "application/json"
      parameters:
      - name: "feedbackId"
        in: "path"
        description: "ID of the feedback"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Feedback to be updated"
        required: true
        schema:
          $ref: "#/definitions/Feedback"
      responses:
        204:
          description: "Successful operation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
  /feedback/{feedbackId}/comments:
    get:
      tags:
      - "admins"
      - "mobile"
      summary: "Get comments related to a feedback"
      description: "Retrieves the list of comments on a given feedback         \n"
      operationId: "getFeedbackComments"
      produces:
      - "application/json"
      parameters:
      - name: "feedbackId"
        in: "path"
        description: "ID of the feedback"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Feedback"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
    post:
      tags:
      - "mobile"
      - "admins"
      summary: "Create a comment on a feedback"
      description: "Creates a new comment in the context of the given feedback \n"
      operationId: "createFeedbackComment"
      consumes:
      - "application/json"
      parameters:
      - name: "feedbackId"
        in: "path"
        description: "ID of the feedback"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Comment to be added"
        required: true
        schema:
          $ref: "#/definitions/UserComment"
      responses:
        201:
          description: "Successful operation"
          headers:
            Location:
              type: "string"
              format: "uri"
              description: "URI to the newly created resource"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
  /comment/{commentId}:
    get:
      tags:
      - "admins"
      - "mobile"
      summary: "Get a comment"
      description: "Retrieves the comment referenced by the URI       \n"
      operationId: "getComment"
      produces:
      - "application/json"
      parameters:
      - name: "commentId"
        in: "path"
        description: "ID of the comment"
        required: true
        type: "string"
        format: "uuid"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserComment"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
    put:
      tags:
      - "mobile"
      - "admins"
      summary: "Create a feedback entry"
      description: "Updates the comment referenced by the URI       \n"
      operationId: "updateComment"
      consumes:
      - "application/json"
      parameters:
      - name: "commentId"
        in: "path"
        description: "ID of the comment"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Comment to be added"
        required: true
        schema:
          $ref: "#/definitions/UserComment"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Request was sent in incorrect format"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Resource was not found"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Mobile"
  /rsa:
    get:
      tags:
      - "admins"
      - "mobile"
      summary: "Get information about the RSA"
      description: "Gets general information about the RSA\n"
      operationId: "getRSAInfo"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/RSAInfo"
        401:
          description: "Access forbidden, invalid authorisation header"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Admins"
definitions:
  PrimaryNeed:
    type: "object"
    properties:
      details:
        type: "array"
        description: "Extra event-specific details"
        items:
          $ref: "#/definitions/EventExtraParams"
  HealthStatus:
    type: "object"
    properties:
      currentIndicators:
        type: "array"
        description: "Main \"numeric\" indicators summarising the event at this time"
        items:
          $ref: "#/definitions/EventExtraParams"
      currentSeverity:
        type: "string"
        example: "mild consequences"
        description: "Textual indication of the current severity of the event"
        readOnly: true
      updates:
        type: "array"
        items:
          $ref: "#/definitions/EventUpdate"
  EventUpdate:
    type: "object"
    properties:
      indicators:
        type: "array"
        description: "Textual indication of the severity of the event"
        items:
          $ref: "#/definitions/EventExtraParams"
      severity:
        type: "string"
        example: "mild consequences"
        description: "Textual indication of the current severity of the event"
        readOnly: true
      details:
        type: "array"
        description: "Extra event-specific details"
        items:
          $ref: "#/definitions/EventExtraParams"
  EventType:
    required:
    - "name"
    properties:
      name:
        type: "string"
        example: "Lunch"
      description:
        type: "string"
        example: "Daily lunch"
      explanation:
        type: "string"
        example: "Meals are personalised to the nutritional needs of each resident.\
          \ Residents are expected to eat 75% of their meals."
      category:
        type: "string"
        example: "Meals"
      repeatsEvery:
        type: "string"
        example: "daily"
        enum:
        - "daily"
        - "weekly"
        - "monthly"
        - "yearly"
      repeatsOn:
        type: "array"
        example:
        - "Monday"
        - "Tuesday"
        items:
          type: "string"
          enum:
          - "Monday"
          - "Tuesday"
          - "Wednesday"
          - "Thursday"
          - "Friday"
          - "Saturday"
          - "Sunday"
  EventExtraParams:
    required:
    - "name"
    properties:
      createdBy:
        $ref: "#/definitions/User"
      name:
        type: "string"
        example: "Meal Completeness"
      description:
        type: "string"
        example: "Portion of the meal eaten"
      valueText:
        type: "string"
      valueNum:
        type: "integer"
        format: "int64"
  Activity:
    required:
    - "category"
    - "description"
    - "duration"
    - "name"
    properties:
      duration:
        type: "string"
      name:
        type: "string"
        example: "Recita del rosario"
      description:
        type: "string"
        example: "Recita del santo rosario organizato dalle nonne"
      benefits:
        type: "string"
        example: "Spiritual support is important"
      category:
        type: "string"
        example: "Religious"
      repeatsEvery:
        type: "string"
        example: "daily"
        enum:
        - "daily"
        - "weekly"
        - "monthly"
        - "yearly"
      repeatsOn:
        type: "array"
        example:
        - "Monday"
        - "Tuesday"
        items:
          type: "string"
          enum:
          - "Monday"
          - "Tuesday"
          - "Wednesday"
          - "Thursday"
          - "Friday"
          - "Saturday"
          - "Sunday"
      location:
        type: "string"
        example: "Room 10, Building C"
        description: "Default value"
      canVolunteer:
        type: "boolean"
        description: "Default value"
      canParticipate:
        type: "boolean"
        description: "Default value"
      canRequestAppointments:
        type: "boolean"
        description: "Default value."
      appointmentRequests:
        type: "array"
        items:
          $ref: "#/definitions/Consultation"
      editions:
        type: "array"
        items:
          $ref: "#/definitions/ActivityEdition"
  ActivityEdition:
    properties:
      status:
        type: "string"
        enum:
        - "confirmed"
        - "finished"
        - "cancelled"
        - "postponed"
      location:
        type: "string"
        example: "Room 22, Building B"
      canVolunteer:
        type: "boolean"
        description: "Values for the especific edition."
      canParticipate:
        type: "boolean"
        description: "Values for the especific edition."
      canRequestAppointments:
        type: "boolean"
        description: "Values for the especific edition."
      participants:
        type: "array"
        items:
          $ref: "#/definitions/ActivityParticipation"
      appointments:
        type: "array"
        items:
          $ref: "#/definitions/Consultation"
      comments:
        type: "array"
        items:
          $ref: "#/definitions/UserComment"
      multimedia:
        type: "array"
        items:
          $ref: "#/definitions/MultimediaAttachment"
  ActivityParticipation:
    required:
    - "role"
    properties:
      status:
        type: "string"
        enum:
        - "confirmed"
        - "cancelled"
        - "planned"
      role:
        type: "string"
        enum:
        - "attendee"
        - "volunteer"
        - "organizer"
      feedback:
        type: "string"
        example: "ParticipationFeeedback"
        readOnly: true
  Consultation:
    properties:
      requestedBy:
        $ref: "#/definitions/User"
  MultimediaAttachment:
    required:
    - "mimeType"
    - "url"
    properties:
      uploadedBy:
        $ref: "#/definitions/User"
      mimeType:
        type: "string"
        example: "image/jpeg"
      url:
        type: "string"
        format: "url"
  CalendarEntry:
    properties:
      pneeds:
        type: "array"
        items:
          $ref: "#/definitions/CalendarEntryPneeds"
      hstatus:
        type: "array"
        items:
          $ref: "#/definitions/CalendarEntryHstatus"
      activities:
        type: "array"
        items:
          $ref: "#/definitions/CalendarEntryActivity"
  CalendarEntryPneeds:
    properties:
      name:
        type: "string"
        example: "Lunch"
      category:
        type: "string"
        example: "Meals"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      type:
        $ref: "#/definitions/EventType"
      event:
        $ref: "#/definitions/PrimaryNeed"
  CalendarEntryHstatus:
    properties:
      name:
        type: "string"
        example: "Blood pressure Measurement"
      category:
        type: "string"
        example: "Bio-messures"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      type:
        $ref: "#/definitions/EventType"
      event:
        $ref: "#/definitions/HealthStatus"
  CalendarEntryActivity:
    properties:
      name:
        type: "string"
        example: "Recita del Rosario"
      category:
        type: "string"
        example: "Religious"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      activity:
        $ref: "#/definitions/Activity"
  UserComment:
    required:
    - "comment"
    properties:
      comment:
        type: "string"
        example: "The resident is doing great"
  Feedback:
    properties:
      subject:
        type: "string"
        example: "Recita del Santo Rosario"
      feedbackBy:
        $ref: "#/definitions/User"
      feedbackOnStaff:
        $ref: "#/definitions/User"
      feedbackOnPN:
        $ref: "#/definitions/PrimaryNeed"
      feedbackOnHS:
        $ref: "#/definitions/HealthStatus"
      feedbackOnActivity:
        $ref: "#/definitions/Activity"
      rating:
        type: "integer"
      comments:
        type: "array"
        items:
          $ref: "#/definitions/UserComment"
  RSAInfo:
    properties:
      name:
        type: "string"
        example: "Trentino RSA"
      description:
        type: "string"
        example: "Funded in 1920, the Trentino RSA excells in ..."
      staff:
        type: "array"
        items:
          $ref: "#/definitions/User"
      contactInfos:
        type: "array"
        items:
          $ref: "#/definitions/ContactInfo"
  ContactInfo:
    properties:
      type:
        type: "string"
        example: "email"
      value:
        type: "string"
        example: "rsadmin@gmail.com"
  User:
    properties:
      name:
        type: "string"
      role:
        type: "string"
        example: "resident"
      contactInfos:
        type: "array"
        items:
          $ref: "#/definitions/ContactInfo"
  SynchInfo:
    properties:
      isShareable:
        type: "boolean"
        description: "Indicates whether the event is shareable"
      eventConfig:
        $ref: "#/definitions/EventSharingConfig"
      sendTo:
        type: "array"
        description: "Information about the people the event should be shared with"
        items:
          $ref: "#/definitions/PersonSharingConfig"
    description: "Resource representing the sharing information for a specific event"
  EventSharingConfig:
    properties:
      name:
        type: "string"
        description: "Name of the Event sharing configuration"
      description:
        type: "string"
        description: "Description of the Event sharing configuration"
      currentSetting:
        $ref: "#/definitions/EventSharingConfigSettings"
    description: "Resource representing the event sharing configuration of the RSA"
  PersonSharingConfig:
    properties:
      contact:
        $ref: "#/definitions/User"
      relationship:
        type: "string"
        example: "dougther"
        description: "Relationship of the family member with the resident"
      preference:
        $ref: "#/definitions/PersonSharingPreference"
      persona:
        $ref: "#/definitions/EventSharingPersona"
    description: "Resource representing sharing information of the family member"
  EventSharingPersona:
    properties:
      name:
        type: "string"
        description: "Name of the Sharing Persona"
      suggestion:
        type: "string"
        description: "Written suggestions on how to deal with this \"Persona\""
      expectedReactions:
        type: "array"
        example:
        - "worry"
        description: "List of potential reactions of this \"Persona\""
        items:
          type: "string"
      members:
        type: "array"
        description: "List of family members belonging to this \"Persona\""
        items:
          $ref: "#/definitions/User"
  EventSharingConfigSettings:
    properties:
      name:
        type: "string"
        description: "Name of this version of the settings"
      description:
        type: "string"
        description: "Description of this version of the settings"
      isActive:
        type: "boolean"
        description: "Indicates whether the current setting is active"
      isShareable:
        type: "boolean"
        description: "Indicates whether the event is shareable"
      reqConfirmation:
        type: "boolean"
        description: "Indicates whether the event sharing requires confirmation. If\
          \ not, the event is shared automatically."
      reqStaffComment:
        type: "boolean"
        description: "Indicates whether the event sharing requires the staff personalised\
          \ comment"
      shareOnInsert:
        type: "boolean"
        description: "Indicates whether the event should be shared at the moment it\
          \ is entered in the system."
      optSnooze:
        type: "boolean"
        description: "Indicates whether the event sharing can be delayed (snoozed)\
          \ by the Staff"
      optCancel:
        type: "boolean"
        description: "Indicates whether the event sharing can be cancelled by the\
          \ Staff"
      shareInApp:
        type: "boolean"
        description: "Indicates whether the event should be shared via the Traduttore\
          \ app"
      shareInCall:
        type: "boolean"
        description: "Indicates whether the event should be shared via phone call"
      shareInSM:
        type: "boolean"
        description: "Indicates whether the event should be shared via a messaging\
          \ app (e.g., WhatsApp)"
      extraParams:
        type: "array"
        description: "Defines the event-specific parameters required"
        items:
          $ref: "#/definitions/EventSharingExtraParam"
    description: "Detailed settings of a sharing configuration"
  EventSharingExtraParam:
    required:
    - "name"
    - "title"
    - "type"
    properties:
      name:
        type: "string"
        description: "Name of the parameter"
      title:
        type: "string"
        description: "Title that will be shown when requesting the parameter"
      type:
        type: "string"
        example: "InputText"
        description: "Type of parameter"
    description: "Resource representing the extra input params for a event sharing"
  PersonSharingPreference:
    properties:
      shareWithMe:
        type: "boolean"
        description: "Indicates whether the person wants to be informed of this event"
      shareInApp:
        type: "boolean"
        description: "Person preference towards being informed via the Traduttore\
          \ app"
      shareInCall:
        type: "boolean"
        description: "Person preference towards being informed via phone call"
      shareInSM:
        type: "boolean"
        description: "Person preference towards being informed via messaging apps"
    description: "Resource representing the sharing preferences of the family member"
  EventSharing:
    properties:
      currentPhase:
        type: "string"
        description: "Current phase in the event process (if any)"
      updates:
        type: "array"
        description: "Event updates, containing the actual event data"
        items:
          $ref: "#/definitions/EventSharingUpdate"
  EventSharingUpdate:
    properties:
      status:
        type: "string"
        description: "Indicates thestatus of the event update \"sharing\""
        enum:
        - "shared"
        - "snoozed"
        - "cancelled"
      phase:
        type: "string"
        description: "Indicates the phase this event update is related to"
      staffComment:
        type: "string"
        description: "Staff comments and notes on the event update (mandatory if reqStaffComment)"
      staffInternalNote:
        type: "string"
        description: "Staff comments for audit purposes"
      sharedFrom:
        type: "string"
        description: "Encodes from where in the Cartella the event was shared"
      sharedInApp:
        type: "boolean"
        description: "Indicates whether the event udpate was shared via Traduttore"
      sharedInCall:
        type: "boolean"
        description: "Indicates whether the event was communicated via phone call"
      sharedInSM:
        type: "boolean"
        description: "Indicates whether the event was communicated via messaging"
      updateData:
        type: "array"
        description: "Data to be shared"
        items:
          $ref: "#/definitions/EventSharingUpdateDetail"
  EventSharingUpdateDetail:
    properties:
      name:
        type: "string"
        description: "Name of the parameter (to match the EventSharingExtraParam)"
      value:
        type: "string"
        description: "Value of the parameter"
    description: "Resource representing the event update data to be shared"
  ResourceId:
    type: "string"
    format: "uuid"
    example: "\"d290f1ee-6c54-4b01-90e6-d701748f0851\""
  ServerTimestamp:
    type: "string"
    format: "date-time"
  UserTimestamp:
    type: "string"
    format: "date-time"
  CartellaId:
    type: "integer"
    example: "11"
  Error:
    properties:
      status:
        type: "integer"
        minimum: 100.0
        maximum: 600.0
      error:
        type: "string"
parameters:
  limitCollection:
    name: "limit"
    in: "query"
    description: "Max number of records to return"
    required: false
    type: "integer"
    format: "int32"
  skipCollection:
    name: "skip"
    in: "query"
    description: "Number of records to skip"
    required: false
    type: "integer"
    format: "int32"
responses:
  AccessForbidden:
    description: "Access forbidden, invalid authorisation header"
    schema:
      $ref: "#/definitions/Error"
  BadRequest:
    description: "Request was sent in incorrect format"
    schema:
      $ref: "#/definitions/Error"
  InvalidDataError:
    description: "Invalid data was sent"
    schema:
      $ref: "#/definitions/Error"
  NotFound:
    description: "Resource was not found"
    schema:
      $ref: "#/definitions/Error"
